from django.core.mail import send_mail
from django.template.loader import render_to_string
from django.conf import settings
from datetime import datetime, timedelta

class NotificationService:
    """Service de notifications par email (gratuit)"""

    @staticmethod
    def send_appointment_confirmation(rendez_vous):
        """Envoyer confirmation de rendez-vous"""
        patient = rendez_vous.patient
        medecin = rendez_vous.medecin

        subject = f"‚úÖ Rendez-vous confirm√© - AssitoSant√©"
        message = f"""
Bonjour {patient.user.first_name},

Votre rendez-vous a √©t√© confirm√© :

üìÖ Date : {rendez_vous.date.strftime('%d/%m/%Y')}
‚è∞ Heure : {rendez_vous.heure.strftime('%H:%M')}
üë®‚Äç‚öïÔ∏è M√©decin : Dr. {medecin.user.first_name} {medecin.user.last_name}
üìç Lieu : √Ä d√©terminer

Merci d'arriver 10 minutes avant l'heure pr√©vue.

Cordialement,
L'√©quipe AssitoSant√©
        """

        try:
            send_mail(
                subject,
                message,
                settings.DEFAULT_FROM_EMAIL,
                [patient.user.email],
                fail_silently=False,
            )
            print(f"‚úÖ Email de confirmation envoy√© √† {patient.user.email}")
        except Exception as e:
            print(f"‚ùå Erreur lors de l'envoi de l'email : {e}")

    @staticmethod
    def send_appointment_cancellation(rendez_vous):
        """Envoyer annulation de rendez-vous"""
        patient = rendez_vous.patient
        medecin = rendez_vous.medecin

        subject = f"‚ùå Rendez-vous annul√© - AssitoSant√©"
        message = f"""
Bonjour {patient.user.first_name},

Votre rendez-vous du {rendez_vous.date.strftime('%d/%m/%Y')} √† {rendez_vous.heure.strftime('%H:%M')} avec Dr. {medecin.user.first_name} {medecin.user.last_name} a √©t√© annul√©.

Veuillez nous contacter pour reprogrammer un nouveau rendez-vous.

Cordialement,
L'√©quipe AssitoSant√©
        """

        try:
            send_mail(
                subject,
                message,
                settings.DEFAULT_FROM_EMAIL,
                [patient.user.email],
                fail_silently=False,
            )
            print(f"‚úÖ Email d'annulation envoy√© √† {patient.user.email}")
        except Exception as e:
            print(f"‚ùå Erreur lors de l'envoi de l'email : {e}")

    @staticmethod
    def send_appointment_reschedule(rendez_vous, old_date, old_time):
        """Envoyer reprogrammation de rendez-vous"""
        patient = rendez_vous.patient
        medecin = rendez_vous.medecin

        subject = f"üìÖ Rendez-vous reprogramm√© - AssitoSant√©"
        message = f"""
Bonjour {patient.user.first_name},

Votre rendez-vous a √©t√© reprogramm√© :

üìÖ Ancienne date : {old_date.strftime('%d/%m/%Y')} √† {old_time.strftime('%H:%M')}
üìÖ Nouvelle date : {rendez_vous.date.strftime('%d/%m/%Y')} √† {rendez_vous.heure.strftime('%H:%M')}
üë®‚Äç‚öïÔ∏è M√©decin : Dr. {medecin.user.first_name} {medecin.user.last_name}

Merci d'arriver 10 minutes avant l'heure pr√©vue.

Cordialement,
L'√©quipe AssitoSant√©
        """

        try:
            send_mail(
                subject,
                message,
                settings.DEFAULT_FROM_EMAIL,
                [patient.user.email],
                fail_silently=False,
            )
            print(f"‚úÖ Email de reprogrammation envoy√© √† {patient.user.email}")
        except Exception as e:
            print(f"‚ùå Erreur lors de l'envoi de l'email : {e}")

    @staticmethod
    def send_welcome_email(user):
        """Envoyer email de bienvenue"""
        subject = f"üéâ Bienvenue sur AssitoSant√©"
        message = f"""
Bonjour {user.first_name},

Bienvenue sur AssitoSant√© ! Votre compte a √©t√© cr√©√© avec succ√®s.

Vous pouvez maintenant :
- Prendre des rendez-vous m√©dicaux
- Consulter votre historique m√©dical
- Recevoir des rappels de m√©dicaments
- Discuter avec notre assistant m√©dical

Cordialement,
L'√©quipe AssitoSant√©
        """

        try:
            send_mail(
                subject,
                message,
                settings.DEFAULT_FROM_EMAIL,
                [user.email],
                fail_silently=False,
            )
            print(f"‚úÖ Email de bienvenue envoy√© √† {user.email}")
        except Exception as e:
            print(f"‚ùå Erreur lors de l'envoi de l'email : {e}")

    @staticmethod
    def send_medication_reminder(patient, medicament, dosage, horaire):
        """Envoyer rappel de prise de m√©dicament"""
        subject = f"üíä Rappel de prise de m√©dicament - {medicament}"
        message = f"""
Bonjour {patient.user.first_name},

C'est l'heure de prendre votre m√©dicament :

üíä M√©dicament : {medicament}
üìè Dosage : {dosage}
‚è∞ Heure : {horaire.strftime('%H:%M')}

Merci de bien vouloir prendre votre m√©dicament comme prescrit.

Cordialement,
L'√©quipe AssitoSant√©
        """

        try:
            send_mail(
                subject,
                message,
                settings.DEFAULT_FROM_EMAIL,
                [patient.user.email],
                fail_silently=False,
            )
            print(f"‚úÖ Rappel de m√©dicament envoy√© √† {patient.user.email}")
        except Exception as e:
            print(f"‚ùå Erreur lors de l'envoi du rappel de m√©dicament : {e}")

    @staticmethod
    def send_urgence_confirmation(urgence):
        """Confirmer la r√©ception de l'urgence au patient"""
        subject = "üö® Urgence re√ßue - AssitoSant√©"
        message = f"""
Bonjour {urgence.patient.user.first_name},

Votre signalement d'urgence a bien √©t√© re√ßu.

Type : {urgence.type_urgence}
Priorit√© : {urgence.get_priorite_display()}
Heure de signalement : {urgence.date_creation.strftime('%H:%M')}

Nos m√©decins ont √©t√© notifi√©s et vont vous contacter rapidement.

EN CAS D'URGENCE VITALE, COMPOSEZ LE 15 (SAMU) IMM√âDIATEMENT.

√âquipe AssitoSant√©
        """

        try:
            send_mail(subject, message, settings.DEFAULT_FROM_EMAIL, [urgence.patient.user.email])
            return True
        except Exception as e:
            print(f"Erreur envoi email : {e}")
            return False

    @staticmethod
    def send_urgence_notification_medecin(urgence, medecin):
        """Notifier un m√©decin d'une urgence"""
        subject = f"üö® URGENCE {urgence.get_priorite_display().upper()} - AssitoSant√©"
        message = f"""
Dr. {medecin.user.first_name},

NOUVELLE URGENCE SIGNAL√âE

Patient : {urgence.patient.user.first_name} {urgence.patient.user.last_name}
Type : {urgence.type_urgence}
Priorit√© : {urgence.get_priorite_display()}
Score : {urgence.score_urgence}/100

Sympt√¥mes : {urgence.symptomes[:200]}

T√©l√©phone : {urgence.telephone_contact}
Heure : {urgence.date_creation.strftime('%H:%M')}

Connectez-vous pour prendre en charge cette urgence.

AssitoSant√©
        """

        try:
            send_mail(subject, message, settings.DEFAULT_FROM_EMAIL, [medecin.user.email])
            return True
        except Exception as e:
            print(f"Erreur envoi email m√©decin : {e}")
            return False

    @staticmethod
    def send_urgence_prise_en_charge(urgence):
        """Notifier le patient de la prise en charge"""
        subject = "‚úÖ Urgence prise en charge"
        message = f"""
Bonjour {urgence.patient.user.first_name},

Votre urgence a √©t√© prise en charge par :

{urgence.medecin_nom}
Sp√©cialit√© : {urgence.medecin_charge.specialite}

Le m√©decin va vous contacter sous peu au {urgence.telephone_contact}.

√âquipe AssitoSant√©
        """

        try:
            send_mail(subject, message, settings.DEFAULT_FROM_EMAIL, [urgence.patient.user.email])
            return True
        except Exception as e:
            print(f"Erreur envoi email : {e}")
            return False
